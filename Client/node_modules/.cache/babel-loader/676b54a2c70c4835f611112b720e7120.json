{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\suvic_0eixjpz\\\\Desktop\\\\Random Coding Projects\\\\Anime\\\\Anime-Ecommerce-Store\\\\client\\\\src\\\\Components\\\\Pages\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Register.css\";\nimport NavBar from '../../Navbar/NavBar';\nimport ScrollToTop from '../../ScrollToTop';\nimport Anouncement from '../../Navbar/Anouncement';\nimport Newsletter from '../../Newsletter/Newsletter';\nimport Footer from '../../Footer/Footer';\nimport { useState } from 'react';\nimport { publicRequest } from '../../../requestMethods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  var created = false;\n\n  const handleError = () => {\n    if (username === \"\" || email === \"\" || phone === \"\" || password === \"\" || confirmPassword === \"\") {\n      alert(\"Please fill out all fields.\");\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords are different.\");\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      const res = await publicRequest.post(\"/auth/register\", {\n        username: username,\n        email: email,\n        password: password\n      });\n      console.log(res.data);\n      created = true;\n      setUsername(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setPhone(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anouncement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"register-heading\",\n      children: \"Create An Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        id: \"first-name\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        id: \"email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Phone Number\",\n        id: \"phone-number\",\n        onChange: e => setPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        id: \"password\",\n        onChange: e => setPassword(e.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Confirm Password\",\n        id: \"confirm-password\",\n        onChange: e => setConfirmPassword(e.target.value),\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        id: \"agreement\",\n        children: \"Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"register-button\",\n        onClick: () => {\n          handleClick();\n          handleError();\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), created && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your account has been created! Please login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Newsletter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"9z+z7zn463uXMAndkIdX4Ofy7lg=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","NavBar","ScrollToTop","Anouncement","Newsletter","Footer","useState","publicRequest","Register","username","setUsername","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","created","handleError","alert","handleClick","res","post","console","log","data","err","e","target","value"],"sources":["C:/Users/suvic_0eixjpz/Desktop/Random Coding Projects/Anime/Anime-Ecommerce-Store/client/src/Components/Pages/Register/Register.jsx"],"sourcesContent":["import React from 'react'\r\nimport \"./Register.css\"\r\nimport NavBar from '../../Navbar/NavBar';\r\nimport ScrollToTop from '../../ScrollToTop';\r\nimport Anouncement from '../../Navbar/Anouncement';\r\nimport Newsletter from '../../Newsletter/Newsletter';\r\nimport Footer from '../../Footer/Footer';\r\nimport { useState } from 'react'; \r\nimport { publicRequest } from '../../../requestMethods';\r\n\r\nconst Register = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  var created = false;\r\n\r\n  const handleError = ()=>{\r\n    if(username === \"\" || email === \"\" || phone === \"\" || password === \"\" || confirmPassword === \"\" ){\r\n      alert(\"Please fill out all fields.\")\r\n    }\r\n    if( password !== confirmPassword){\r\n      alert(\"Passwords are different.\")\r\n    }\r\n  }\r\n\r\n  const handleClick = async ()=>{\r\n    try{\r\n      const res = await publicRequest.post(\"/auth/register\",{\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      })\r\n      console.log(res.data);\r\n      created = true;\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setPhone(\"\");\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className = \"register-container\">\r\n      <ScrollToTop/>\r\n      <Anouncement/>\r\n      <NavBar/>\r\n        <h1 id = \"register-heading\">Create An Account</h1>\r\n          <div className = \"contact-wrapper\">\r\n            <input placeholder = \"Username\" id = \"first-name\" onChange = {(e)=> setUsername(e.target.value)}></input>\r\n            <input placeholder = \"Email\" id = \"email\" onChange = {(e)=> setEmail(e.target.value)}></input>\r\n            <input placeholder = \"Phone Number\" id = \"phone-number\" onChange = {(e)=> setPhone(e.target.value)}></input>\r\n            <input placeholder = \"Password\" id = \"password\" onChange = {(e)=> setPassword(e.target.value)}  type = \"password\"></input>\r\n            <input placeholder = \"Confirm Password\" id = \"confirm-password\" onChange = {(e)=> setConfirmPassword(e.target.value)} type = \"password\"></input>\r\n            <h5 id = \"agreement\">Lorem Ipsum has been the industry's standard dummy text ever since \r\n            the 1500s, when an unknown printer took a galley of type and scrambled it to make a type \r\n            specimen book.</h5>\r\n            <button id = \"register-button\" onClick={() => { handleClick(); handleError();}}>Create</button>\r\n            {created && <h2>Your account has been created! Please login</h2>}\r\n        </div>\r\n      <Newsletter/>\r\n      <Footer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register"],"mappings":"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"},"metadata":{},"sourceType":"module"}